p#notice = notice

h2
  = fa_icon 'user-circle-o'
  = @mail_account.name
  span.text-muted.m-4
    = fa_icon 'envelope-o'
    = @mail_account.email



div.row
  div.col-md-6
    table
      thead

      tbody
        tr
          td
            strong = t(:login)
          td = @mail_account.login
        tr
          td
            strong = t(:host)
          td = "#{@mail_account.host}:#{@mail_account.port}"
        tr
          td
            strong SSL
          td = @mail_account.ssl? ? fa_icon('check') : fa_icon('times')
  div.col-md-6
    table
      thead

      tbody
        tr
          td
            strong interval
          td = @mail_account.settings(:sync_options).interval
        tr
          td
            strong only_seen
          td = @mail_account.settings(:sync_options).only_seen ? fa_icon('check') : fa_icon('times')
        tr
          td
            strong only_older_than
          td = " #{@mail_account.settings(:sync_options).only_older_than} days"
        tr
          td
            strong delete_after
          td = " #{@mail_account.settings(:sync_options).delete_after} days"
        tr
          td
            strong exclude_folders
          td = @mail_account.settings(:sync_options).exclude_folders
  div.col-md-6
    strong Last sync:
    - if @mail_account.sync_job
      - job = @mail_account.sync_job
      = "#{l job.sync_start} (p:#{job.processed_entries} n:#{job.new_entries} s:#{job.skipped_entries}) -- #{job.state}" unless @mail_account.sync_job.nil?
      br
      button.btn.btn-primary.mb-2 data-toggle="collapse" href="#sync-info" role="button" aria-expanded="false" aria-controls="sync-info"
        | Show
      div#sync-info.collapse
        = "job ##{job.id}"
        pre
          = job.info
          hr
          = "#{l job.sync_start} until #{l job.sync_end}"
    - else
      | No sync jobs
hr

div.row
  div.col-md-2
    ul.list-group
      - @mail_account.mailbox_folders.each do |f|
        li.list-group-item title="#{f.name}"
          = f.name
  div.col
    h2 Mails (#{@mail_account.user_mails.count})
    = link_to "Fetch user_mails", pull_imap_mail_account_path(id: @mail_account), :method => :post
    - @mails = @mail_account.user_mails.paginate(:page => params[:page], :per_page => 15)

    table.table-striped
      thead.thead-inverse
        tr
          th From
          th Received
          th Subject
          th
      tbody
        - @mails.each do |mail|
          tr
            td
              = mail.from
            td
              = mail.receive_date
            td
              = mail.subject
            td
              = link_to 'Show',user_mail_path(id: mail.id)
    = will_paginate @mails
= link_to 'Edit', edit_mail_account_path(@mail_account)
'  |
= link_to 'Back', mail_accounts_path
